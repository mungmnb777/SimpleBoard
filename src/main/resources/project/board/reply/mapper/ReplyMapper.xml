<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.board.reply.mapper.ReplyMapper">

    <resultMap id="reply" type="project.board.reply.Reply">
        <result column="reply_id" property="replyId"/>
        <result column="content" property="content"/>
        <result column="user_id" property="userId"/>
        <result column="board_id" property="boardId"/>
        <result column="reply_create_date" property="replyCreateDate"/>
        <result column="reply_update_date" property="replyUpdateDate"/>
        <result column="depth" property="depth"/>
        <result column="reply_group" property="replyGroup"/>
    </resultMap>

    <resultMap id="replyJoinNickname" type="project.board.reply.ReplyJoinNicknameDto">
        <result column="reply_id" property="replyId"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="nickname" property="nickname"/>
        <result column="reply_create_date" property="replyCreateDate"/>
        <result column="depth" property="depth"/>
        <result column="reply_group" property="replyGroup"/>
    </resultMap>

    <select id="findById" resultMap="replyJoinNickname">
        SELECT reply_id, user_id, content, nickname, depth, reply_group, reply_create_date FROM reply NATURAL JOIN user WHERE reply_id = #{replyId}
    </select>

    <select id="findGroup" resultType="int">
        SELECT MAX(reply_group) FROM reply
    </select>

    <select id="findAll" resultMap="reply">
        SELECT * FROM reply
    </select>

    <select id="findReply" resultMap="replyJoinNickname">
        SELECT reply_id, user_id, content, nickname, reply_create_date, depth, reply_group
        FROM reply NATURAL JOIN user
        WHERE board_id = #{boardId} AND depth = 1 ORDER BY reply_id ASC
    </select>

    <select id="findNestedReply" parameterType="project.board.reply.Reply" resultMap="replyJoinNickname">
        SELECT reply_id, user_id, content, nickname, reply_create_date, depth, reply_group
        FROM reply NATURAL JOIN user
        WHERE board_id = #{boardId} AND reply_group = #{replyGroup} AND depth = 2 ORDER BY reply_id ASC
    </select>

    <insert id="insertReply" parameterType="project.board.reply.Reply" useGeneratedKeys="true" keyColumn="reply_id" keyProperty="replyId">
        INSERT INTO reply(content, user_id, board_id, reply_create_date, depth, reply_group)
        VALUES(#{content}, #{userId}, #{boardId}, #{replyCreateDate}, #{depth}, #{replyGroup})
    </insert>

    <update id="updateReply" parameterType="project.board.reply.Reply">
        UPDATE reply SET content = #{content}, reply_update_date = #{replyUpdateDate}
        WHERE reply_id = #{replyId}
    </update>

    <delete id="deleteReply" parameterType="project.board.reply.Reply">
        DELETE FROM reply WHERE reply_id = #{replyId}
    </delete>

    <delete id="deleteAll">
        DELETE FROM reply WHERE board_id = #{boardId}
    </delete>
</mapper>